# Copyright 2013 The Flutter Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//flutter/impeller/tools/impeller.gni")

impeller_component("renderer") {
  metal_backend_sources = [
    "backend/metal/allocator_mtl.h",
    "backend/metal/allocator_mtl.mm",
    "backend/metal/command_buffer_mtl.h",
    "backend/metal/command_buffer_mtl.mm",
    "backend/metal/context_mtl.h",
    "backend/metal/context_mtl.mm",
    "backend/metal/device_buffer_mtl.h",
    "backend/metal/device_buffer_mtl.mm",
    "backend/metal/formats_mtl.h",
    "backend/metal/formats_mtl.mm",
    "backend/metal/pipeline_library_mtl.h",
    "backend/metal/pipeline_library_mtl.mm",
    "backend/metal/pipeline_mtl.h",
    "backend/metal/pipeline_mtl.mm",
    "backend/metal/render_pass_mtl.h",
    "backend/metal/render_pass_mtl.mm",
    "backend/metal/sampler_library_mtl.h",
    "backend/metal/sampler_library_mtl.mm",
    "backend/metal/sampler_mtl.h",
    "backend/metal/sampler_mtl.mm",
    "backend/metal/shader_function_mtl.h",
    "backend/metal/shader_function_mtl.mm",
    "backend/metal/shader_library_mtl.h",
    "backend/metal/shader_library_mtl.mm",
    "backend/metal/surface_mtl.h",
    "backend/metal/surface_mtl.mm",
    "backend/metal/texture_mtl.h",
    "backend/metal/texture_mtl.mm",
    "backend/metal/vertex_descriptor_mtl.h",
    "backend/metal/vertex_descriptor_mtl.mm",
  ]

  sources = [
              "allocator.h",
              "allocator.cc",
              "buffer.h",
              "buffer.cc",
              "buffer_view.h",
              "buffer_view.cc",
              "command.h",
              "command.cc",
              "command_buffer.h",
              "command_buffer.cc",
              "context.h",
              "context.cc",
              "device_buffer.h",
              "device_buffer.cc",
              "formats.cc",
              "formats.h",
              "host_buffer.h",
              "host_buffer.cc",
              "pipeline.h",
              "pipeline.cc",
              "pipeline_builder.h",
              "pipeline_builder.cc",
              "pipeline_descriptor.h",
              "pipeline_descriptor.cc",
              "pipeline_library.h",
              "pipeline_library.cc",
              "platform.h",
              "platform.cc",
              "range.cc",
              "range.h",
              "render_pass.h",
              "render_pass.cc",
              "render_target.h",
              "render_target.cc",
              "renderer.h",
              "renderer.cc",
              "sampler.h",
              "sampler.cc",
              "sampler_descriptor.h",
              "sampler_descriptor.cc",
              "sampler_library.h",
              "sampler_library.cc",
              "shader_function.h",
              "shader_function.cc",
              "shader_library.h",
              "shader_library.cc",
              "shader_types.cc",
              "shader_types.h",
              "surface.h",
              "surface.cc",
              "texture.h",
              "texture.cc",
              "texture_descriptor.h",
              "texture_descriptor.cc",
              "vertex_buffer.h",
              "vertex_buffer.cc",
              "vertex_buffer_builder.h",
              "vertex_buffer_builder.cc",
              "vertex_descriptor.h",
              "vertex_descriptor.cc",
            ] + metal_backend_sources

  public_deps = [
    "../base",
    "../geometry",
    "../image",
    "../tessellator",
  ]

  deps = [
    "//flutter/fml",

    # FML depends on the Dart VM for tracing and getting the current
    # timepoint.
    "//flutter/runtime:libdart",
  ]

  frameworks = [ "Metal.framework" ]
}

source_set("renderer_unittests") {
  testonly = true

  sources = [
    "device_buffer_unittests.cc",
    "host_buffer_unittests.cc",
    "renderer_unittests.cc",
  ]

  deps = [
    ":renderer",
    "../fixtures",
    "../playground",
    "//flutter/testing:testing_lib",
  ]
}
